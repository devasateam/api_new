# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page It is hard coded as Sign in
GET     /     						controllers.Assets.at(path="/public", file="signin.html")
GET     /dashboard     				controllers.Assets.at(path="/public", file="dashboard.html")
GET     /resetpassword				controllers.Assets.at(path="/public", file="resetpassword.html")

GET 	/authcheck					controllers.AuthenticationController.authCheck()
#Login page will return you Dash Board Json if Success else status code and message
POST    /login                      controllers.AuthenticationController.authenticate(email:String,password:String)

#Logout will simply Clear the session and returns a message
GET     /logout                     controllers.AuthenticationController.logout()

# Registers the user, sending an email to confirm the account.
POST    /signup                     controllers.account.Signup.save(name:String,email:String,password:String)

# Accessed when the user confirms the registration.
GET     /confirm/:confirmToken      controllers.account.Signup.confirm(confirmToken:String)

# Resets the password using the password.
POST    /reset			            controllers.account.Reset.runReset(token:String,password:String)

# Resets the password using the email.
GET     /reset/:token            controllers.account.Reset.reset(token:String)
POST    /askresetpassword		 controllers.account.Reset.runAsk(email:String)


#After Registration Validation confirmation link sent to the user
GET     /email/:token               controllers.account.settings.Email.validateEmail(token:String)

#Get all List of Brands
GET    	/brands                	controllers.BrandController.getBrands()

#Add Brand providing all the params
POST   /addbrand			           	  controllers.BrandController.saveBrand()
POST   /saveBrandImage	                  controllers.BrandController.saveImage(fileName:String)

POST   /saveMultipartBrand				  controllers.BrandController.saveMultipartBrand()

# Map static resources from the /public folder to the /assets URL path
GET     /*file               controllers.Assets.at(path="/public", file)